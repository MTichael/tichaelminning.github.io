{"version":3,"sources":["./src/app/character-search/character-search.component.ts","./src/app/character-search/character-search.component.html","./src/app/navigation-bar/navigation-bar.component.ts","./src/app/navigation-bar/navigation-bar.component.html","./src/environments/environment.ts","./src/app/backstory/backstory.component.html","./src/app/backstory/backstory.component.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/in-memory-data.service.ts","./src/app/message.service.ts","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/mail.service.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/player-characters/player-characters.component.html","./src/app/player-characters/player-characters.component.ts","./src/app/encounter-generator/encounter-generator.component.ts","./src/app/encounter-generator/encounter-generator.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\nimport { PC } from '../pc';\r\nimport { MailService } from '../mail.service';\r\n\r\n@Component({\r\n  selector: 'app-character-search',\r\n  templateUrl: './character-search.component.html',\r\n  styleUrls: ['./character-search.component.css']\r\n})\r\nexport class CharacterSearchComponent implements OnInit {\r\n  characters$:Observable<PC[]>;\r\n  private searchTerms = new Subject<string>();\r\n\r\n  constructor(private mailService: MailService) { }\r\n  \r\n  // Push a search term into the observable stream\r\n  search(term:string):void {\r\n    this.searchTerms.next(term);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.characters$ = this.searchTerms.pipe(\r\n      debounceTime(300), //Waiting 300ms after each keystroke to consider the total term\r\n      distinctUntilChanged(), //Ignore new term if same as previous term\r\n      switchMap((term:string) => this.mailService.searchCharacters(term)),\r\n    );\r\n  }\r\n}\r\n","<div id=\"search-component\">\r\n  <label for=\"search-box\">Character Search</label>\r\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\r\n  \r\n  <ul class=\"search-result\">\r\n    <li *ngFor=\"let character of characters$ | async\" >\r\n      <a routerLink=\"/backstory/{{character.id}}\">{{character.name}}</a>\r\n    </li>\r\n  </ul>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navigation-bar',\r\n  templateUrl: './navigation-bar.component.html',\r\n  styleUrls: ['./navigation-bar.component.css']\r\n})\r\nexport class NavigationBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <nav>\r\n    <a routerLink=\"/homepage\">Home</a>\r\n    <a routerLink=\"/dashboard\">Dashboard</a>\r\n    <a routerLink=\"/player-characters\">Player Characters</a>\r\n    <a routerLink=\"/encounter-generator\">Encounter Keeper</a>\r\n  </nav>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div *ngIf=\"character\">\r\n  <h2>{{character.name | uppercase}} Details</h2>\r\n  <div><span>id: </span>{{character.id}}</div>\r\n  <div> \r\n    <label> name:\r\n      <input [(ngModel)]=\"character.name\" placeholder=\"name\"/>\r\n    </label>\r\n  </div>\r\n  <button (click)=\"goBack()\">go back</button>\r\n  <button (click)=\"save()\">save</button>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PC } from '../pc';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { MailService } from '../mail.service';\r\n\r\n@Component({\r\n  selector: 'app-backstory',\r\n  templateUrl: './backstory.component.html',\r\n  styleUrls: ['./backstory.component.css']\r\n})\r\nexport class BackstoryComponent implements OnInit {\r\n  character: PC;\r\n  \r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private mailService: MailService,\r\n    private location: Location \r\n  ) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.getCharacter();\r\n  }\r\n  \r\n  getCharacter(): void {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.mailService.getCharacter(id).subscribe(character => this.character = character);\r\n  }\r\n  \r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n  \r\n  save(): void {\r\n    this.mailService.updateCharacter(this.character).subscribe(()=>this.goBack());\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"messageService.messages.length\">\r\n  <h2>Messages</h2>\r\n  <button class=\"clear\" (click)=\"messageService.clear()\">CLEAR</button>\r\n  <div *ngFor='let message of messageService.messages'>{{message}}</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from '../message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  constructor(public messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { PC } from './pc';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n  createDb() {\r\n    const characters = [\r\n      { id: 101, name: 'Professor Mallein' },\r\n      { id: 102, name: 'Gniv-Eth' },\r\n      { id: 103, name: 'Kosuke Drajic' },\r\n      { id: 104, name: 'Eagrette' },\r\n      { id: 105, name: 'Dorraine' },\r\n      { id: 106, name: 'Kef Jo Henrana' },\r\n      { id: 107, name: 'Brigundy Branutoo' },\r\n      { id: 108, name: 'Inbeg' },\r\n      { id: 109, name: 'Ketzeni Lumesne' },\r\n      { id: 110, name: 'Taneka Lipitl' },\r\n      { id: 111, name: 'Lt. Ryleigh' },\r\n      { id: 112, name: 'Lt. Paris' },\r\n      { id: 113, name: 'Keffon Harc' },\r\n      { id: 114, name: 'Geon Geitz' }\r\n    ];\r\n    return {characters};\r\n  }\r\n  \r\n  // Override genId method to ensure that a hero always has an id\r\n  // if the character array is empty then the overridden method returns the initial number (101)\r\n  // if the characters array is NOT empty then the overridden method returns the highest ID + 1\r\n  genId(characters:PC[]): number {\r\n    return characters.length > 0 ? Math.max(...characters.map(character => character.id)) + 1 : 101;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n  \r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n  \r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <div class=\"sidebar\">Sidebar Div</div>\r\n  <div class=\"primary-content\">\r\n    <h2>Michael Tinning</h2>\r\n    <div class=\"float-child\" style=\"width:25%;height:50%;\">\r\n      <p>\r\n        Hi, Hey There, Hello! I'm a computer engineer and web designer from south Texas specializing in learning as well as maintaining a plethora of hobbies. While design holds most of my interest, I have more experience as a QA, especially in regards to automation testing. But this site wasn't built for that purpose. My personal website was built from the ground up to house all of the ideas and projects I have bursting forth from my imagination. And if it can serve as a portfolio for work, well, all the better!\r\n      </p>\r\n      <p>\r\n        On the left, you'll find a sidebar with information on the current page. Here, there might not be too much to populate it, but it will update automatically with each page you visit here for ease of navigation. Clicking on a header will bring you to that part of the page, similarly to how the table of contents on Wikipedia works. The top nav bar will help you navigate between the pages of the site. I like to think of them like the wings of a castle. Each link will bring you to a new wing, but you'll still be in the one castle. Which is fitting, because this site is built with Angular, meaning it's a single page application, requiring no loading of new pages for navigation. Instead, the content of the page will be changed according to the wing you're in. \r\n      </p>\r\n      <p>\r\n        Anyways, I hope you enjoy exploring the site! I try to update it regularly so all the ideas I have don't get lost or crowd up my brain too much. If you like the feel of it and want to tell me how easy it is on the eyes, feel free to reach me at my business email! \r\n      </p>\r\n    </div>\r\n    <div class=\"float-child\" id=\"picture-section\">\r\n      <img src=\"assets/img/Self.png\">\r\n    </div>\r\n  </div>\r\n  <div style=\"height:800px\"></div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { PC } from './pc';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { MessageService } from './message.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MailService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService\r\n  ) { }\r\n  \r\n  private characterURL = 'api/characters'; //URL to web API\r\n  private log(message: string) {\r\n    this.messageService.add(`MailService: ${message}`);\r\n  }\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type':'application/json' })\r\n  };\r\n  \r\n  getCharacters(): Observable<PC[]> {\r\n    return this.http.get<PC[]>(this.characterURL)\r\n      .pipe(\r\n        tap(_ => this.log('fetched characters')),\r\n        catchError(this.handleError<PC[]>('getCharacters',[]))\r\n      );\r\n  }\r\n  \r\n  // Get character by ID. Returns ERR:404 if ID not found\r\n  getCharacter(id: number): Observable<PC> {\r\n    const url = `${this.characterURL}/${id}`;\r\n    return this.http.get<PC>(url).pipe(\r\n      tap(_ => this.log(`fetched hero id=${id}`)),\r\n      catchError(this.handleError<PC>(`getCharacter id=${id}`))\r\n    );\r\n  }\r\n  \r\n  //Put: Update the Character on the server\r\n  updateCharacter(character: PC):Observable<any> {\r\n    return this.http.put(this.characterURL,character,this.httpOptions).pipe(\r\n      tap(_ => this.log(`updated character id=${character.id}`)),\r\n      catchError(this.handleError<any>('updateCharacter'))\r\n    );\r\n  }\r\n  \r\n  //Post: add a new character to the server\r\n  addCharacter(character:PC):Observable<PC> {\r\n    return this.http.post<PC>(this.characterURL, character, this.httpOptions).pipe(\r\n      tap((newCharacter:PC) => this.log(`added character with id=${newCharacter.id}`)),\r\n      catchError(this.handleError<PC>(`addCharacter`))\r\n    );\r\n  }\r\n  \r\n  //Delete: delete the character from the server\r\n  deleteCharacter(id:number):Observable<PC> {\r\n    const url = `${this.characterURL}/${id}`;\r\n    \r\n    return this.http.delete<PC>(url,this.httpOptions).pipe(\r\n      tap(_=>this.log(`deleted character id=${id}`)),\r\n      catchError(this.handleError<PC>('deleteHero'))\r\n    );\r\n  }\r\n  \r\n  //Get: characters whose name matchs the search term\r\n  searchCharacters(term:string):Observable<PC[]> {\r\n    if(!term.trim()) {\r\n      //if ain't search term, return empty array\r\n      return of([]);\r\n    }\r\n    return this.http.get<PC[]>(`${this.characterURL}/?name=${term}`).pipe(\r\n      tap(x => x.length ?\r\n        this.log(`found characters matching \"${term}\"`) :\r\n         this.log(`no characters found matching \"${term}\"`)),\r\n      catchError(this.handleError<PC[]>('searchCharacters',[]))\r\n    );\r\n  }\r\n  \r\n  /**\r\n    Handle HTTP operation that failed. \r\n    Let the app continue. \r\n    @param operation - name of the operation that failed\r\n    @param result - optional value to return as the observable result\r\n  */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      //TODO: send the error to a remote logging infrastructure\r\n      console.error(error); //logging to console in the meantime\r\n      \r\n      //TODO: better job of trasnsforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`); //sending base error message in the meantime\r\n      \r\n      //Let the app keep running by returning an empty result\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","<h3>Top Heroes</h3>\r\n<div class=\"grid grid-pad\">\r\n  <a *ngFor=\"let character of characters\" class=\"col-1-4\"\r\n     routerLink=\"/backstory/{{character.id}}\">\r\n    <div class=\"module character\">\r\n      <h4>{{character.name}}</h4>\r\n    </div>\r\n  </a>\r\n</div>\r\n\r\n<app-character-search></app-character-search>","import { Component, OnInit } from '@angular/core';\r\nimport { PC } from '../PC';\r\nimport { MailService } from '../mail.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  characters: PC[] = [];\r\n\r\n  constructor(private mailService: MailService) { }\r\n\r\n  ngOnInit() {\r\n    this.getCharacters();\r\n  }\r\n\r\n  getCharacters(): void {\r\n    this.mailService.getCharacters()\r\n      .subscribe(characters => this.characters = characters.slice(1,5));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'World of Errau';\r\n}\r\n","<div style=\"flex:1 0 auto;webkit-box-flex:1;\">\r\n  <app-navigation-bar></app-navigation-bar>\r\n  <router-outlet></router-outlet>\r\n  <app-messages></app-messages>\r\n</div>\r\n\r\n<!--\r\n<footer>\r\n  <app-footer></app-footer>\r\n</footer>-->\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { InMemoryDataService } from './in-memory-data.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PlayerCharactersComponent } from './player-characters/player-characters.component';\r\nimport { BackstoryComponent } from './backstory/backstory.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { CharacterSearchComponent } from './character-search/character-search.component';\r\nimport { NavigationBarComponent } from './navigation-bar/navigation-bar.component';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { EncounterGeneratorComponent } from './encounter-generator/encounter-generator.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PlayerCharactersComponent,\r\n    BackstoryComponent,\r\n    MessagesComponent,\r\n    DashboardComponent,\r\n    CharacterSearchComponent,\r\n    NavigationBarComponent,\r\n    HomepageComponent,\r\n    EncounterGeneratorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\r\n    // and returns simulated server responses.\r\n    // Remove it when a real server is ready to receive requests.\r\n    HttpClientInMemoryWebApiModule.forRoot(\r\n      InMemoryDataService, { dataEncapsulation: false }\r\n    )\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n//Last left off at \r\n/* \r\n * Completed Tutorial \r\nhttps://angular.io/guide/architecture\r\n*/","<h2>Characters</h2>\r\n<div>\r\n  <label id=\"new-character\">Character name: </label>\r\n  <input for=\"new-character\" #characterName />\r\n  \r\n  <button class=\"add-button\" (click)=\"add(characterName.value);characterName.value=''\">\r\n    Add Character\r\n  </button>\r\n</div>\r\n<!--\r\n<div>\r\n  <ul class=\"characters\">\r\n    <li>\r\n        <span class=\"badge\">{{shield.id}}</span> {{shield.name}}\r\n    </li>\r\n  </ul>\r\n</div>\r\n-->\r\n<div>\r\n  <ul class=\"characters\">\r\n      <li *ngFor=\"let character of characters\">\r\n        <a routerLink=\"/backstory/{{character.id}}\">\r\n          <span class=\"badge\">{{character.id}}</span> {{character.name}}\r\n        </a>\r\n        <button class=\"delete\" title=\"delete character\" (click)=\"delete(character)\">X</button>\r\n      </li>\r\n  </ul>\r\n</div>\r\n\r\n<!--<app-backstory [character]=\"selectedCharacter\"></app-backstory>-->\r\n\r\n<!--   ngModel - Angular two-way binding \r\n<label>\r\n        <input [(ngModel)]=\"shield.name\" placeholder=\"name\" />\r\n    </label>\r\n\r\n-->","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { PC } from '../pc';\r\n\r\nimport { MailService } from '../mail.service';\r\n\r\n@Component({\r\n  selector: 'app-player-characters',\r\n  templateUrl: './player-characters.component.html',\r\n  styleUrls: ['./player-characters.component.css']\r\n})\r\nexport class PlayerCharactersComponent implements OnInit {\r\n  characters: PC[];\r\n//  shield: PC = {\r\n//      id: 10,\r\n//      name: \"Elsin Gaebora\"\r\n//  }\r\n    \r\n  constructor(private mailservice: MailService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCharacters();\r\n  }\r\n  \r\n  getCharacters(): void {\r\n    //this.characters = this.mailservice.getCharacters();\r\n    this.mailservice.getCharacters().subscribe(characters => this.characters = characters);\r\n  }\r\n  \r\n  add(name:string):void {\r\n    name = name.trim();\r\n    if(!name) {return;}\r\n    this.mailservice.addCharacter({name} as PC)\r\n      .subscribe(character => {\r\n        this.characters.push(character);\r\n    });\r\n  }\r\n  \r\n  delete(character:PC):void {\r\n    this.characters = this.characters.filter(c => c !== character);\r\n    this.mailservice.deleteCharacter(character.id).subscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-encounter-generator',\r\n  templateUrl: './encounter-generator.component.html',\r\n  styleUrls: ['./encounter-generator.component.css']\r\n})\r\nexport class EncounterGeneratorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"primary-content\"> \r\n  <h2>New Encounter Generator</h2>\r\n  <div>\r\n    <form> \r\n      <table>\r\n        <tr>\r\n          <th>Party Size</th>\r\n          <th>Party Level</th>\r\n          <th>Party Health</th>\r\n          <th>Party Damage</th>\r\n          <th>Difficulty</th>\r\n          <th>Number of Foes</th>\r\n        </tr>\r\n        <tr>\r\n          <td><input placeholder=\"Number of Party Members\"></td>\r\n          <td><input placeholder=\"Average Party Level\"></td>\r\n          <td><input placeholder=\"Average Party Health\"></td>\r\n          <td><input placeholder=\"Average DPR\"></td>\r\n          <td>\r\n            <select placeholder=\"Desired Difficulty\">\r\n              <option>Trivial</option>\r\n              <option>Easy</option>\r\n              <option>Moderate</option>\r\n              <option>Difficult</option>\r\n              <option>Deadly</option>\r\n              <option>Impossible</option>\r\n            </select>\r\n          </td>\r\n          <td><input type=\"number\" placeholder=\"Lowest Count\"> | <input type=\"number\" placeholder=\"Highest Count\"></td>\r\n        </tr>\r\n      </table>\r\n    </form>\r\n  </div>\r\n  <div>\r\n    <!-- OUTPUT -->\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { PlayerCharactersComponent } from './player-characters/player-characters.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { BackstoryComponent } from './backstory/backstory.component';\r\nimport { EncounterGeneratorComponent } from './encounter-generator/encounter-generator.component';\r\n\r\nconst routes = [\r\n  { path: '', redirectTo: '/homepage', pathMatch: 'full' },\r\n  { path: 'player-characters', component: PlayerCharactersComponent },\r\n  { path: 'dashboard', component: DashboardComponent }, \r\n  { path: 'backstory/:id', component: BackstoryComponent },\r\n  { path: 'homepage', component: HomepageComponent },\r\n  { path: 'encounter-generator', component: EncounterGeneratorComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}